

// Determines if the intersection point falls within the triangle?
// fn ray_triangle_intersection_test(v0: vec3<f32>, v1: vec3<f32>, v2: vec3<f32>, P: vec3<f32>, N: vec3<f32>) -> bool {
//     // Performs the inside outside test
//     var edge0: vec3<f32> = v1 - v0;
//     var edge1: vec3<f32> = v2 - v1;
//     var edge2: vec3<f32> = v0 - v2;
//     var C0: vec3<f32> = P - v0;
//     var C1: vec3<f32> = P - v1;
//     var C2: vec3<f32> = P - v2;
//     if (dot(N, cross(edge0, C0)) >= 0 && 
//         dot(N, cross(edge1, C1)) >= 0 &&
//         dot(N, cross(edge2, C2)) >= 0) {
//         // P is inside the triangle
//         return true; 
//     }
//     return false; 
// }